# SPDX-FileCopyrightText: 2024 Jonah Br√ºchert <jbb@kaidan.im>
# SPDX-License-Identifier: CC0-1.0

name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Node.js dependencies
        run: cd website && npm install

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Restore cached licenses.json
        uses: actions/cache/restore@v4
        with:
          path: |
            out/license.json
          key: licenses-
          restore-keys: |
            licenses-

      - run: pip install mkdocs
      - run: mkdocs build --site-dir ../website/static/doc/ -f docs/mkdocs.yml

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cp out/license.json website/data/
          cd website && npm run release

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

